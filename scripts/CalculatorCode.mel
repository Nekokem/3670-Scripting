{


proc float AddValue(float $num[])
{
       
       float $sum = $num[0];
       for($i=0; $i<size($num); $i++)
       {
           $sum += $num[$i];
       }
       return $sum;
}
float $numberAdd = AddValue ({10,4});
print $numberAdd;


proc float SubValue(float $num[])
{
       
       float $sum = $num[0];
       for($i=1; $i<size($num); $i++)
       {
           $sum -= $num[$i];
       }
       return $sum;
}
float $numberSub = SubValue ({10,7});
print $numberSub;


proc float MultValue(float $num[])
{
       
       float $sum = $num[0];
       for($i=0; $i<size($num); $i++)
       {
           $sum *= $num[$i];
       }
       return $sum;
}
float $numberMult = MultValue ({4,8});
print $numberMult;


proc float DivValue(float $num[])
{
       
       float $result = $num[0];
       for($i=1; $i<size($num); $i++)
       {
           $result /= $num[$i];
       }
       
       return $result;
}
float $numberDiv2 = DivValue ({18,2});
print $numberDiv2;

proc float ModValue(float $num[])
{
       
       float $result = $num[0];
       for($i=1; $i<size($num); $i++)
       {
           $result %= $num[$i];
       }
       
       return $result;
}
float $numberMod = DivValue ({18,2});
print $numberMod;

proc float AverageNum(float $num[])
{
    float $result = AddValue($num[]);
    return $result / size($num);

}

float $numberAve = AverageNum {(5,7,3,2,5,6)};
print $numberAve;

}